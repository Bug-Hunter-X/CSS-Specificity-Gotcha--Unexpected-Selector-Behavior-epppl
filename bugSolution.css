To fix this, you need to understand the specificity rules of CSS selectors. There are several ways to solve this issue, depending on your desired outcome.  

**Solution 1:  Adjust Selector Order**

In some cases, simply rearranging the order of your selectors can solve the problem.  The more specific selector should be placed later in the stylesheet. This is not always feasible or reliable.

**Solution 2: Use !important (Not Recommended)**

While generally discouraged, using the `!important` flag can force a specific style to apply. However, this is not considered a best practice as it compromises maintainability and can lead to harder-to-debug CSS issues.

```css
.container p {
  color: red !important;
}
```

**Solution 3:  Improve Selector Specificity (Recommended)**

This is the preferred approach. If you want the second style to override the first, you could either make the second selector more specific or make the first one less specific (or make them equally specific).

For example, adding an ID to the parent `div`:

```css
#container-id p {
  color: blue;
}

.container p {
  color: red;
}
```

Now, the `.container p` selector has a higher specificity and will override `#container-id p`'s styles.

Choose the solution that best fits your CSS architecture and always strive for clean, well-organized, and maintainable code.